/* Game-spezifische Styles f√ºr das Elektronik Lernspiel */

.game-container {
    width: 100vw;
    height: 100vh;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

/* Game Header */
.game-header {
    background: rgba(255, 255, 255, 0.95);
    padding: 15px 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(10px);
    z-index: 100;
}

.level-info {
    display: flex;
    align-items: center;
    gap: 20px;
}

.level-info h2 {
    color: #2c3e50;
    margin: 0;
    font-size: 1.5em;
}

.level-progress {
    background: #e9ecef;
    padding: 5px 10px;
    border-radius: 15px;
    font-weight: bold;
    color: #495057;
}

.game-controls {
    display: flex;
    gap: 10px;
}

/* Game Layout */
.game-layout {
    flex: 1;
    display: flex;
    gap: 10px;
    padding: 10px;
    min-height: 0;
}

/* Components Panel */
.components-panel {
    width: 300px;
    background: rgba(255, 255, 255, 0.95);
    border-radius: 12px;
    padding: 20px;
    display: flex;
    flex-direction: column;
    gap: 20px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(10px);
}

.components-panel h3 {
    color: #2c3e50;
    margin: 0;
    padding-bottom: 10px;
    border-bottom: 2px solid #e9ecef;
}

.components-palette {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
    gap: 10px;
    max-height: 300px;
    overflow-y: auto;
}

.component-item {
    background: #fff;
    border: 2px solid #dee2e6;
    border-radius: 8px;
    padding: 10px;
    text-align: center;
    cursor: grab;
    transition: all 0.3s ease;
    user-select: none;
    position: relative;
}

.component-item:hover {
    border-color: #667eea;
    transform: scale(1.05);
    box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
}

.component-item:active {
    cursor: grabbing;
    transform: scale(0.95);
}

.component-item img {
    width: 100%;
    height: 40px;
    object-fit: contain;
    margin-bottom: 5px;
}

.component-item .component-name {
    font-size: 0.8em;
    font-weight: bold;
    color: #495057;
}

.component-item .component-count {
    position: absolute;
    top: -5px;
    right: -5px;
    background: #007bff;
    color: white;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    font-size: 0.7em;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
}

.task-panel {
    background: #f8f9fa;
    border-radius: 8px;
    padding: 15px;
    border-left: 4px solid #667eea;
}

.task-panel h3 {
    color: #2c3e50;
    margin-bottom: 10px;
    font-size: 1.1em;
}

.task-panel p {
    color: #495057;
    line-height: 1.5;
    margin: 0;
}

/* Game Area */
.game-area {
    flex: 1;
    position: relative;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.game-canvas {
    width: 100%;
    height: 100%;
    background: #ffffff;
    display: block;
    cursor: default;
}

.game-canvas.wiring-mode {
    cursor: crosshair;
}

/* Placed Components */
.placed-component {
    position: absolute;
    cursor: move;
    user-select: none;
    border: 2px solid transparent;
    border-radius: 8px;
    padding: 5px;
    transition: all 0.2s ease;
}

.placed-component:hover {
    border-color: #667eea;
    box-shadow: 0 0 10px rgba(102, 126, 234, 0.3);
}

.placed-component.selected {
    border-color: #007bff;
    box-shadow: 0 0 15px rgba(0, 123, 255, 0.4);
}

.placed-component.error {
    border-color: #dc3545;
    box-shadow: 0 0 10px rgba(220, 53, 69, 0.4);
}

.placed-component img {
    display: block;
    pointer-events: none;
}

/* Connection Points */
.connection-point {
    position: absolute;
    width: 12px;
    height: 12px;
    background: #28a745;
    border: 2px solid #fff;
    border-radius: 50%;
    cursor: pointer;
    z-index: 10;
    transition: all 0.2s ease;
    transform: translate(-50%, -50%);
}

.connection-point:hover {
    background: #20c997;
    transform: translate(-50%, -50%) scale(1.3);
    box-shadow: 0 0 8px rgba(40, 167, 69, 0.5);
}

.connection-point.connected {
    background: #007bff;
}

.connection-point.highlighted {
    background: #ffc107;
    box-shadow: 0 0 12px rgba(255, 193, 7, 0.7);
}

/* Wires */
.wire {
    stroke-width: 4;
    fill: none;
    cursor: pointer;
    transition: all 0.2s ease;
}

.wire.normal {
    stroke: #28a745;
}

.wire.powered {
    stroke: #007bff;
    filter: drop-shadow(0 0 3px rgba(0, 123, 255, 0.6));
}

.wire.error {
    stroke: #dc3545;
    filter: drop-shadow(0 0 3px rgba(220, 53, 69, 0.6));
}

.wire:hover {
    stroke-width: 6;
    filter: drop-shadow(0 0 5px rgba(0, 0, 0, 0.3));
}

.wire.multi-core {
    stroke-width: 6;
}

/* Feedback Overlay */
.feedback-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    animation: fadeIn 0.3s ease;
}

.feedback-content {
    background: white;
    border-radius: 15px;
    padding: 40px;
    text-align: center;
    max-width: 400px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    animation: slideUp 0.3s ease;
}

.feedback-icon {
    font-size: 4em;
    margin-bottom: 20px;
}

.feedback-icon.success {
    color: #28a745;
}

.feedback-icon.error {
    color: #dc3545;
}

.feedback-icon.warning {
    color: #ffc107;
}

.feedback-icon.destroyed {
    color: #6f42c1;
}

.feedback-content h3 {
    color: #2c3e50;
    margin-bottom: 15px;
    font-size: 1.5em;
}

.feedback-content p {
    color: #495057;
    margin-bottom: 25px;
    line-height: 1.5;
}

/* Animations */
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes slideUp {
    from {
        transform: translateY(30px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.1); }
}

.pulse {
    animation: pulse 1s infinite;
}

/* Circuit Effects */
.spark-effect {
    position: absolute;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: radial-gradient(circle, #ffeb3b, #ff9800);
    animation: spark 0.5s ease-out forwards;
    pointer-events: none;
}

@keyframes spark {
    0% {
        transform: scale(0);
        opacity: 1;
    }
    100% {
        transform: scale(2);
        opacity: 0;
    }
}

/* Responsive Design */
@media (max-width: 1024px) {
    .game-layout {
        flex-direction: column;
    }
    
    .components-panel {
        width: 100%;
        flex-direction: row;
        gap: 20px;
        height: auto;
    }
    
    .components-palette {
        flex: 1;
        max-height: 150px;
    }
    
    .task-panel {
        min-width: 200px;
    }
}

@media (max-width: 768px) {
    .game-header {
        flex-direction: column;
        gap: 10px;
        padding: 10px;
    }
    
    .level-info {
        flex-direction: column;
        gap: 10px;
        text-align: center;
    }
    
    .components-panel {
        flex-direction: column;
        gap: 15px;
    }
    
    .task-panel {
        min-width: auto;
    }
    
    .game-controls {
        justify-content: center;
    }
}

/* Switch Button Styles */
.switch-button {
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
    font-size: 0.7em;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
}

.switch-button:hover {
    transform: translate(-50%, -50%) scale(1.1);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
}

.switch-button:active {
    transform: translate(-50%, -50%) scale(0.95);
}

/* Improved Component Effects */
.placed-component.powered {
    box-shadow: 0 0 15px rgba(0, 123, 255, 0.6);
    animation: powerPulse 2s infinite;
}

@keyframes powerPulse {
    0%, 100% { box-shadow: 0 0 15px rgba(0, 123, 255, 0.6); }
    50% { box-shadow: 0 0 25px rgba(0, 123, 255, 0.9); }
}

/* LED Brightness Effects */
.led-bright {
    filter: brightness(1.5) saturate(1.3);
    animation: ledGlow 1s infinite alternate;
}

@keyframes ledGlow {
    0% { filter: brightness(1.5) saturate(1.3); }
    100% { filter: brightness(1.8) saturate(1.6); }
}

/* Enhanced Wire Effects */
.wire.animated {
    stroke-dasharray: 10, 5;
    animation: wireFlow 1s linear infinite;
}

@keyframes wireFlow {
    0% { stroke-dashoffset: 0; }
    100% { stroke-dashoffset: 15; }
}

/* Click Ripple Effect */
.click-ripple {
    position: absolute;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.6);
    transform: scale(0);
    animation: ripple 0.6s linear;
    pointer-events: none;
}

@keyframes ripple {
    to {
        transform: scale(4);
        opacity: 0;
    }
}

/* Success Animation */
.level-complete {
    animation: levelCompleteAnimation 1s ease-in-out;
}

@keyframes levelCompleteAnimation {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); filter: hue-rotate(180deg); }
    100% { transform: scale(1); }
}

/* Mobile Touch Improvements */
@media (max-width: 768px) {
    .connection-point {
        width: 16px;
        height: 16px;
    }
    
    .switch-button {
        width: 25px;
        height: 20px;
    }
    
    .component-item {
        padding: 15px;
    }
}